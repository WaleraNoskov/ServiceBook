// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceBook.DataAccess;

#nullable disable

namespace ServiceBook.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ServiceBook.Core.Entities.ConsumableItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConsumableTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Mileage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConsumableTypeId");

                    b.ToTable("ConsumableItems");
                });

            modelBuilder.Entity("ServiceBook.Core.Entities.ConsumableType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConsumableType");
                });

            modelBuilder.Entity("ServiceBook.Core.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ServiceBook.Core.Entities.VehicleConsumable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConsumableId")
                        .HasColumnType("TEXT");

                    b.Property<long>("InstalledAtMilleage")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("RemovedAtMilleage")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConsumableId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleConsumables");
                });

            modelBuilder.Entity("ServiceBook.Core.Entities.ConsumableItem", b =>
                {
                    b.HasOne("ServiceBook.Core.Entities.ConsumableType", "ConsumableType")
                        .WithMany()
                        .HasForeignKey("ConsumableTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsumableType");
                });

            modelBuilder.Entity("ServiceBook.Core.Entities.VehicleConsumable", b =>
                {
                    b.HasOne("ServiceBook.Core.Entities.ConsumableItem", "Consumable")
                        .WithMany()
                        .HasForeignKey("ConsumableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceBook.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("Consumables")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumable");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ServiceBook.Core.Entities.Vehicle", b =>
                {
                    b.Navigation("Consumables");
                });
#pragma warning restore 612, 618
        }
    }
}
